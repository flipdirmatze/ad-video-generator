import { createReadStream } from 'fs';
import { Readable } from 'stream';
import ffmpeg from 'fluent-ffmpeg';
import ffmpegInstaller from '@ffmpeg-installer/ffmpeg';
import { v4 as uuidv4 } from 'uuid';
import path from 'path';
import fs from 'fs-extra';

// Set FFmpeg path
ffmpeg.setFfmpegPath(ffmpegInstaller.path);

// Types for video segments
export type VideoSegment = {
  id: string;
  file: File;
  startTime: number;
  endTime: number;
  duration: number;
  order: number;
};

// Function to get video duration
export const getVideoDuration = (file: File): Promise<number> => {
  return new Promise((resolve, reject) => {
    const url = URL.createObjectURL(file);
    const video = document.createElement('video');
    video.preload = 'metadata';
    
    video.onloadedmetadata = () => {
      URL.revokeObjectURL(url);
      resolve(video.duration);
    };
    
    video.onerror = (e) => {
      URL.revokeObjectURL(url);
      reject(e);
    };
    
    video.src = url;
  });
};
